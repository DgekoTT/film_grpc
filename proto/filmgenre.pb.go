// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.23.4
// source: proto/filmgenre.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NoParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NoParams) Reset() {
	*x = NoParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_filmgenre_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoParams) ProtoMessage() {}

func (x *NoParams) ProtoReflect() protoreflect.Message {
	mi := &file_proto_filmgenre_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoParams.ProtoReflect.Descriptor instead.
func (*NoParams) Descriptor() ([]byte, []int) {
	return file_proto_filmgenre_proto_rawDescGZIP(), []int{0}
}

type FilmData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID             uint64 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	FilmName       string `protobuf:"bytes,2,opt,name=FilmName,proto3" json:"FilmName,omitempty"`
	ProductionYear uint32 `protobuf:"varint,3,opt,name=ProductionYear,proto3" json:"ProductionYear,omitempty"`
	Genres         string `protobuf:"bytes,4,opt,name=Genres,proto3" json:"Genres,omitempty"`
}

func (x *FilmData) Reset() {
	*x = FilmData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_filmgenre_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilmData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilmData) ProtoMessage() {}

func (x *FilmData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_filmgenre_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilmData.ProtoReflect.Descriptor instead.
func (*FilmData) Descriptor() ([]byte, []int) {
	return file_proto_filmgenre_proto_rawDescGZIP(), []int{1}
}

func (x *FilmData) GetID() uint64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *FilmData) GetFilmName() string {
	if x != nil {
		return x.FilmName
	}
	return ""
}

func (x *FilmData) GetProductionYear() uint32 {
	if x != nil {
		return x.ProductionYear
	}
	return 0
}

func (x *FilmData) GetGenres() string {
	if x != nil {
		return x.Genres
	}
	return ""
}

type InfoFilmUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID             uint64 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	FilmName       string `protobuf:"bytes,2,opt,name=FilmName,proto3" json:"FilmName,omitempty"`
	ProductionYear uint32 `protobuf:"varint,3,opt,name=ProductionYear,proto3" json:"ProductionYear,omitempty"`
}

func (x *InfoFilmUpdate) Reset() {
	*x = InfoFilmUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_filmgenre_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InfoFilmUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoFilmUpdate) ProtoMessage() {}

func (x *InfoFilmUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_proto_filmgenre_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoFilmUpdate.ProtoReflect.Descriptor instead.
func (*InfoFilmUpdate) Descriptor() ([]byte, []int) {
	return file_proto_filmgenre_proto_rawDescGZIP(), []int{2}
}

func (x *InfoFilmUpdate) GetID() uint64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *InfoFilmUpdate) GetFilmName() string {
	if x != nil {
		return x.FilmName
	}
	return ""
}

func (x *InfoFilmUpdate) GetProductionYear() uint32 {
	if x != nil {
		return x.ProductionYear
	}
	return 0
}

type Film struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID             uint64   `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	FilmName       string   `protobuf:"bytes,2,opt,name=FilmName,proto3" json:"FilmName,omitempty"`
	ProductionYear uint32   `protobuf:"varint,3,opt,name=ProductionYear,proto3" json:"ProductionYear,omitempty"`
	Genres         []*Genre `protobuf:"bytes,4,rep,name=Genres,proto3" json:"Genres,omitempty"`
}

func (x *Film) Reset() {
	*x = Film{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_filmgenre_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Film) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Film) ProtoMessage() {}

func (x *Film) ProtoReflect() protoreflect.Message {
	mi := &file_proto_filmgenre_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Film.ProtoReflect.Descriptor instead.
func (*Film) Descriptor() ([]byte, []int) {
	return file_proto_filmgenre_proto_rawDescGZIP(), []int{3}
}

func (x *Film) GetID() uint64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Film) GetFilmName() string {
	if x != nil {
		return x.FilmName
	}
	return ""
}

func (x *Film) GetProductionYear() uint32 {
	if x != nil {
		return x.ProductionYear
	}
	return 0
}

func (x *Film) GetGenres() []*Genre {
	if x != nil {
		return x.Genres
	}
	return nil
}

type GetFilmResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Films []*Film `protobuf:"bytes,1,rep,name=films,proto3" json:"films,omitempty"`
}

func (x *GetFilmResponse) Reset() {
	*x = GetFilmResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_filmgenre_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFilmResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFilmResponse) ProtoMessage() {}

func (x *GetFilmResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_filmgenre_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFilmResponse.ProtoReflect.Descriptor instead.
func (*GetFilmResponse) Descriptor() ([]byte, []int) {
	return file_proto_filmgenre_proto_rawDescGZIP(), []int{4}
}

func (x *GetFilmResponse) GetFilms() []*Film {
	if x != nil {
		return x.Films
	}
	return nil
}

type GenreIds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IDs []uint64 `protobuf:"varint,1,rep,packed,name=IDs,proto3" json:"IDs,omitempty"`
}

func (x *GenreIds) Reset() {
	*x = GenreIds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_filmgenre_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenreIds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenreIds) ProtoMessage() {}

func (x *GenreIds) ProtoReflect() protoreflect.Message {
	mi := &file_proto_filmgenre_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenreIds.ProtoReflect.Descriptor instead.
func (*GenreIds) Descriptor() ([]byte, []int) {
	return file_proto_filmgenre_proto_rawDescGZIP(), []int{5}
}

func (x *GenreIds) GetIDs() []uint64 {
	if x != nil {
		return x.IDs
	}
	return nil
}

type Genre struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID        uint32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	GenreName string `protobuf:"bytes,2,opt,name=GenreName,proto3" json:"GenreName,omitempty"`
}

func (x *Genre) Reset() {
	*x = Genre{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_filmgenre_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Genre) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Genre) ProtoMessage() {}

func (x *Genre) ProtoReflect() protoreflect.Message {
	mi := &file_proto_filmgenre_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Genre.ProtoReflect.Descriptor instead.
func (*Genre) Descriptor() ([]byte, []int) {
	return file_proto_filmgenre_proto_rawDescGZIP(), []int{6}
}

func (x *Genre) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Genre) GetGenreName() string {
	if x != nil {
		return x.GenreName
	}
	return ""
}

type GetGenresResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Genres []*Genre `protobuf:"bytes,1,rep,name=genres,proto3" json:"genres,omitempty"`
}

func (x *GetGenresResponse) Reset() {
	*x = GetGenresResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_filmgenre_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGenresResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGenresResponse) ProtoMessage() {}

func (x *GetGenresResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_filmgenre_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGenresResponse.ProtoReflect.Descriptor instead.
func (*GetGenresResponse) Descriptor() ([]byte, []int) {
	return file_proto_filmgenre_proto_rawDescGZIP(), []int{7}
}

func (x *GetGenresResponse) GetGenres() []*Genre {
	if x != nil {
		return x.Genres
	}
	return nil
}

type OperationStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationStatus string `protobuf:"bytes,1,opt,name=OperationStatus,proto3" json:"OperationStatus,omitempty"`
}

func (x *OperationStatus) Reset() {
	*x = OperationStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_filmgenre_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperationStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperationStatus) ProtoMessage() {}

func (x *OperationStatus) ProtoReflect() protoreflect.Message {
	mi := &file_proto_filmgenre_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperationStatus.ProtoReflect.Descriptor instead.
func (*OperationStatus) Descriptor() ([]byte, []int) {
	return file_proto_filmgenre_proto_rawDescGZIP(), []int{8}
}

func (x *OperationStatus) GetOperationStatus() string {
	if x != nil {
		return x.OperationStatus
	}
	return ""
}

type ID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID uint64 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *ID) Reset() {
	*x = ID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_filmgenre_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ID) ProtoMessage() {}

func (x *ID) ProtoReflect() protoreflect.Message {
	mi := &file_proto_filmgenre_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ID.ProtoReflect.Descriptor instead.
func (*ID) Descriptor() ([]byte, []int) {
	return file_proto_filmgenre_proto_rawDescGZIP(), []int{9}
}

func (x *ID) GetID() uint64 {
	if x != nil {
		return x.ID
	}
	return 0
}

var File_proto_filmgenre_proto protoreflect.FileDescriptor

var file_proto_filmgenre_proto_rawDesc = []byte{
	0x0a, 0x15, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x66, 0x69, 0x6c, 0x6d, 0x67, 0x65, 0x6e, 0x72,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x66, 0x69, 0x6c, 0x6d, 0x47, 0x65, 0x6e,
	0x72, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x0a, 0x0a, 0x08, 0x4e, 0x6f,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x76, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x6d, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02,
	0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x69, 0x6c, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26,
	0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x59, 0x65, 0x61, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x59, 0x65, 0x61, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x22, 0x64,
	0x0a, 0x0e, 0x49, 0x6e, 0x66, 0x6f, 0x46, 0x69, 0x6c, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x49, 0x44,
	0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x46, 0x69, 0x6c, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x59, 0x65, 0x61, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x59, 0x65, 0x61, 0x72, 0x22, 0x8c, 0x01, 0x0a, 0x04, 0x46, 0x69, 0x6c, 0x6d, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1a, 0x0a,
	0x08, 0x46, 0x69, 0x6c, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x46, 0x69, 0x6c, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x59, 0x65, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x59, 0x65, 0x61,
	0x72, 0x12, 0x30, 0x0a, 0x06, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x66, 0x69, 0x6c, 0x6d, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x52, 0x06, 0x47, 0x65, 0x6e,
	0x72, 0x65, 0x73, 0x22, 0x40, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x6d, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x66, 0x69, 0x6c, 0x6d, 0x47, 0x65, 0x6e, 0x72,
	0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x6d, 0x52, 0x05,
	0x66, 0x69, 0x6c, 0x6d, 0x73, 0x22, 0x1c, 0x0a, 0x08, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x49, 0x64,
	0x73, 0x12, 0x10, 0x0a, 0x03, 0x49, 0x44, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x03,
	0x49, 0x44, 0x73, 0x22, 0x35, 0x0a, 0x05, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09,
	0x47, 0x65, 0x6e, 0x72, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x45, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x30, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x66, 0x69, 0x6c, 0x6d, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x72, 0x65,
	0x73, 0x22, 0x3b, 0x0a, 0x0f, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x14,
	0x0a, 0x02, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x02, 0x49, 0x44, 0x32, 0xc1, 0x05, 0x0a, 0x10, 0x46, 0x69, 0x6c, 0x6d, 0x47, 0x65, 0x6e,
	0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x44, 0x0a, 0x0a, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x6d, 0x12, 0x1b, 0x2e, 0x66, 0x69, 0x6c, 0x6d, 0x47, 0x65,
	0x6e, 0x72, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x6d,
	0x44, 0x61, 0x74, 0x61, 0x1a, 0x17, 0x2e, 0x66, 0x69, 0x6c, 0x6d, 0x47, 0x65, 0x6e, 0x72, 0x65,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x6d, 0x22, 0x00, 0x12,
	0x50, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x46, 0x69, 0x6c, 0x6d, 0x73, 0x12, 0x1b,
	0x2e, 0x66, 0x69, 0x6c, 0x6d, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x4e, 0x6f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x22, 0x2e, 0x66, 0x69,
	0x6c, 0x6d, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x3f, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x6d, 0x42, 0x79, 0x49, 0x64,
	0x12, 0x15, 0x2e, 0x66, 0x69, 0x6c, 0x6d, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x44, 0x1a, 0x17, 0x2e, 0x66, 0x69, 0x6c, 0x6d, 0x47, 0x65,
	0x6e, 0x72, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x6d,
	0x22, 0x00, 0x12, 0x55, 0x0a, 0x0a, 0x55, 0x70, 0x44, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x6d,
	0x12, 0x21, 0x2e, 0x66, 0x69, 0x6c, 0x6d, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x46, 0x69, 0x6c, 0x6d, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x1a, 0x22, 0x2e, 0x66, 0x69, 0x6c, 0x6d, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x0a, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x6d, 0x12, 0x15, 0x2e, 0x66, 0x69, 0x6c, 0x6d, 0x47, 0x65,
	0x6e, 0x72, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x44, 0x1a, 0x22,
	0x2e, 0x66, 0x69, 0x6c, 0x6d, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x65,
	0x6e, 0x72, 0x65, 0x12, 0x18, 0x2e, 0x66, 0x69, 0x6c, 0x6d, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x1a, 0x18, 0x2e,
	0x66, 0x69, 0x6c, 0x6d, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x47, 0x65, 0x6e, 0x72, 0x65, 0x49, 0x64, 0x73, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18,
	0x2e, 0x66, 0x69, 0x6c, 0x6d, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x1a, 0x1b, 0x2e, 0x66, 0x69, 0x6c, 0x6d, 0x47,
	0x65, 0x6e, 0x72, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x6e,
	0x72, 0x65, 0x49, 0x64, 0x73, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x12, 0x1b, 0x2e, 0x66, 0x69, 0x6c, 0x6d, 0x47, 0x65,
	0x6e, 0x72, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4e, 0x6f, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x1a, 0x24, 0x2e, 0x66, 0x69, 0x6c, 0x6d, 0x47, 0x65, 0x6e, 0x72, 0x65,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x65, 0x6e, 0x72,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0b,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x12, 0x15, 0x2e, 0x66, 0x69,
	0x6c, 0x6d, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x49, 0x44, 0x1a, 0x22, 0x2e, 0x66, 0x69, 0x6c, 0x6d, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x00, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_filmgenre_proto_rawDescOnce sync.Once
	file_proto_filmgenre_proto_rawDescData = file_proto_filmgenre_proto_rawDesc
)

func file_proto_filmgenre_proto_rawDescGZIP() []byte {
	file_proto_filmgenre_proto_rawDescOnce.Do(func() {
		file_proto_filmgenre_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_filmgenre_proto_rawDescData)
	})
	return file_proto_filmgenre_proto_rawDescData
}

var file_proto_filmgenre_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_proto_filmgenre_proto_goTypes = []interface{}{
	(*NoParams)(nil),          // 0: filmGenre_service.NoParams
	(*FilmData)(nil),          // 1: filmGenre_service.FilmData
	(*InfoFilmUpdate)(nil),    // 2: filmGenre_service.InfoFilmUpdate
	(*Film)(nil),              // 3: filmGenre_service.Film
	(*GetFilmResponse)(nil),   // 4: filmGenre_service.GetFilmResponse
	(*GenreIds)(nil),          // 5: filmGenre_service.GenreIds
	(*Genre)(nil),             // 6: filmGenre_service.Genre
	(*GetGenresResponse)(nil), // 7: filmGenre_service.GetGenresResponse
	(*OperationStatus)(nil),   // 8: filmGenre_service.OperationStatus
	(*ID)(nil),                // 9: filmGenre_service.ID
}
var file_proto_filmgenre_proto_depIdxs = []int32{
	6,  // 0: filmGenre_service.Film.Genres:type_name -> filmGenre_service.Genre
	3,  // 1: filmGenre_service.GetFilmResponse.films:type_name -> filmGenre_service.Film
	6,  // 2: filmGenre_service.GetGenresResponse.genres:type_name -> filmGenre_service.Genre
	1,  // 3: filmGenre_service.FilmGenreService.CreateFilm:input_type -> filmGenre_service.FilmData
	0,  // 4: filmGenre_service.FilmGenreService.GetAllFilms:input_type -> filmGenre_service.NoParams
	9,  // 5: filmGenre_service.FilmGenreService.GetFilmById:input_type -> filmGenre_service.ID
	2,  // 6: filmGenre_service.FilmGenreService.UpDateFilm:input_type -> filmGenre_service.InfoFilmUpdate
	9,  // 7: filmGenre_service.FilmGenreService.DeleteFilm:input_type -> filmGenre_service.ID
	6,  // 8: filmGenre_service.FilmGenreService.CreateGenre:input_type -> filmGenre_service.Genre
	6,  // 9: filmGenre_service.FilmGenreService.GetGenreIdsByName:input_type -> filmGenre_service.Genre
	0,  // 10: filmGenre_service.FilmGenreService.GetAllGenres:input_type -> filmGenre_service.NoParams
	9,  // 11: filmGenre_service.FilmGenreService.DeleteGenre:input_type -> filmGenre_service.ID
	3,  // 12: filmGenre_service.FilmGenreService.CreateFilm:output_type -> filmGenre_service.Film
	4,  // 13: filmGenre_service.FilmGenreService.GetAllFilms:output_type -> filmGenre_service.GetFilmResponse
	3,  // 14: filmGenre_service.FilmGenreService.GetFilmById:output_type -> filmGenre_service.Film
	8,  // 15: filmGenre_service.FilmGenreService.UpDateFilm:output_type -> filmGenre_service.OperationStatus
	8,  // 16: filmGenre_service.FilmGenreService.DeleteFilm:output_type -> filmGenre_service.OperationStatus
	6,  // 17: filmGenre_service.FilmGenreService.CreateGenre:output_type -> filmGenre_service.Genre
	5,  // 18: filmGenre_service.FilmGenreService.GetGenreIdsByName:output_type -> filmGenre_service.GenreIds
	7,  // 19: filmGenre_service.FilmGenreService.GetAllGenres:output_type -> filmGenre_service.GetGenresResponse
	8,  // 20: filmGenre_service.FilmGenreService.DeleteGenre:output_type -> filmGenre_service.OperationStatus
	12, // [12:21] is the sub-list for method output_type
	3,  // [3:12] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_proto_filmgenre_proto_init() }
func file_proto_filmgenre_proto_init() {
	if File_proto_filmgenre_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_filmgenre_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_filmgenre_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilmData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_filmgenre_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InfoFilmUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_filmgenre_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Film); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_filmgenre_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFilmResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_filmgenre_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenreIds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_filmgenre_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Genre); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_filmgenre_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGenresResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_filmgenre_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperationStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_filmgenre_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_filmgenre_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_filmgenre_proto_goTypes,
		DependencyIndexes: file_proto_filmgenre_proto_depIdxs,
		MessageInfos:      file_proto_filmgenre_proto_msgTypes,
	}.Build()
	File_proto_filmgenre_proto = out.File
	file_proto_filmgenre_proto_rawDesc = nil
	file_proto_filmgenre_proto_goTypes = nil
	file_proto_filmgenre_proto_depIdxs = nil
}
